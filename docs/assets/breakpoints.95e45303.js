import{o as e,c as t,a as n,w as s,d as l,f as a,g as o,r as i}from"./vendor.66ab2837.js";const c=l("Breakpoints"),r=l("What is this for?"),d=n("p",null,[l("If you are not familiar with breakpoints, you should first read about it."),n("br"),l("\nThe breakpoints are usaully useful when you want to change the layout for a particular viewport width."),n("br"),l("\nIn Wave UI, you can use them in different ways:")],-1),u=n("li",null,"Access the current breakpoint in JavaScript",-1),f=l("Use responsive grids with breakpoint-specific classes. Read more in"),m=l("Layout > Grid system"),p=l("."),h=l("Use breakpoint-specific layout classes like "),x=n("code",null,"sm-hide",-1),g=l(" or "),b=n("code",null,"lgu-text-center",-1),y=l(" and many other."),w=n("br",null,null,-1),k=l("\nAll the layout classes presented in: "),v=l("Layout > Flex"),j=l("Default breakpoints"),S=o('<p class="mt6">By default, 5 breakpoints are set:</p><ul><li class="mb1"><code class="mr2">xs</code><span>from 0 to 600px</span></li><li class="mb1"><code class="mr2">sm</code><span>from 601px to 900px</span></li><li class="mb1"><code class="mr2">md</code><span>from 901px to 1200px</span></li><li class="mb1"><code class="mr2">lg</code><span>from 1201px to 1700px</span></li><li class="mb1"><code class="mr2">xl</code><span>from 1701px and more</span></li></ul>',2),_=l("The "),C=n("code",null,"$waveui.breakpoint",-1),I=l(" object"),U=o('<p class="mt4">You can access the current breakpoint from anywhere using\n<code>this.$waveui.breakpoint.name</code>, or one of these quick booleans from\nthe same <code>this.$waveui.breakpoint</code> object:</p><ul><li class="mb1"><code>xs</code></li><li class="mb1"><code>sm</code></li><li class="mb1"><code>md</code></li><li class="mb1"><code>lg</code></li><li class="mb1"><code>xl</code></li></ul>',2),$={class:"title2 mt0"},z=l("Current breakpoint: "),L=n("em",{class:"grey mt1"},"Resizing your browser will update the current breakpoint.",-1),W=l("breakpoint-specific layout classes"),A=n("p",null,"All the following CSS classes can be used complementarily on the same DOM node for different breakpoints.",-1),R=l(".show {display: block;}\n.hide {display: none;}\n\n.d-flex {display: flex;}\n.d-iflex {display: inline-flex;}\n.d-block {display: block;}\n.d-iblock {display: inline-block;}\n\n.text-left {text-align: left;}\n.text-center {text-align: center;}\n.text-right {text-align: right;}\n\n.row {flex-direction: row;}\n.column {flex-direction: column;}\n.grow {flex-grow: 1;flex-basis: auto;}\n.no-grow {flex-grow: 0;}\n.shrink {flex-shrink: 1;margin-left: auto;margin-right: auto;}\n.no-shrink {flex-shrink: 0;}\n.fill-width {width: 100%;}\n.fill-height {height: 100%;}\n.basis-zero {flex-basis: 0;}\n\n.align-start {align-items: flex-start;}\n.align-center {align-items: center;}\n.align-end {align-items: flex-end;}\n.align-self-start {align-self: flex-start;}\n.align-self-center {align-self: center;}\n.align-self-end {align-self: flex-end;}\n.align-self-stretch {align-self: stretch;}\n.justify-start {justify-content: flex-start;}\n.justify-center {justify-content: center;}\n.justify-end {justify-content: flex-end;}\n.justify-space-between {justify-content: space-between;}\n.justify-space-around {justify-content: space-around;}\n.justify-space-evenly {justify-content: space-evenly;}\n"),T=o('<p class="mt6">To use them on a particular breakpoint, the syntax is: <code>.[breakpoint][extend]-[class]</code>, with:</p><ul><li><strong class="code">[breakpoint]</strong> one of: <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, <code>xl</code>.</li><li><strong class="code">[extend]</strong> one of <code>u</code> (and up), <code>d</code> (and down) and\n<strong>no character</strong> to target only this breakpoint.</li><li><strong class="code">[class]</strong> one of the above CSS class name.</li></ul>',2),B=l("Note that "),D=n("code",null,".xsd-[class]",-1),Y=l(" and "),q=n("code",null,".xlu-[class]",-1),F=l(" don't exist since they are the same as "),G=n("code",null,".xs-[class]",-1),J=l(" and "),M=n("code",null,".xl-[class]",-1),N=l("."),O=n("p",{class:"mt6"},[l("In these two examples, resize your browser to less than 900px (default "),n("code",null,"md"),l(") to see see the\nlayout changed.")],-1),X=n("div",{class:"text-left smd-text-center"},"Some text on the left.",-1),E=n("div",{class:"text-center smd-hide"},"Some text in the center.",-1),H=n("div",{class:"text-right smd-text-center"},"Some text on the right.",-1),K=l('<div class="text-left smd-text-center">Some text on the left.</div>\n<div class="text-center smd-hide">Some text in the center.</div>\n<div class="text-right smd-text-center">Some text on the right.</div>'),P=n("div",{class:"w-flex justify-space-between smd-column"},[n("span",null,"Some text on the left."),n("span",null,"Some text in the center."),n("span",null,"Some text on the right.")],-1),Q=l('<div class="w-flex justify-space-between smd-column">\n  <span>Some text on the left.</span>\n  <span>Some text in the center.</span>\n  <span>Some text on the right.</span>\n</div>\n'),V=l("If you'd rather not have these CSS layout classes, you can disable them via the\n"),Z=n("code",null,"breakpointLayoutClasses",-1),ee=l(" config."),te=l("const waveui = new WaveUI({\n  css: {\n    breakpointLayoutClasses: false\n  }\n})\n"),ne=l("Setting custom breakpoints"),se=n("p",{class:"mt4"},"You can override the default breakpoints values with:",-1),le=l("const waveui = new WaveUI({\n  breakpoints: {\n    xs: 600,\n    sm: 900,\n    md: 1200,\n    lg: 1700\n    // Xl doesn't need to be overridden:\n    // it always starts from lg & goes to infinity.\n  }\n})");const ae={render:function(o,ae){const oe=i("title-link"),ie=i("router-link"),ce=i("w-card"),re=i("example"),de=i("ssh-pre"),ue=i("alert");return e(),t("main",null,[n(oe,{class:"mt4",h1:""},{default:s((()=>[c])),_:1}),n(oe,{h2:""},{default:s((()=>[r])),_:1}),d,n("ul",null,[u,n("li",null,[f,n(ie,{class:"ml1",to:"/layout--grid-system"},{default:s((()=>[m])),_:1}),p]),n("li",null,[h,x,g,b,y,w,k,n(ie,{class:"ml1",to:"/layout--flex"},{default:s((()=>[v])),_:1})])]),n(oe,{h2:""},{default:s((()=>[j])),_:1}),S,n(oe,{h2:"",slug:"the-wave-ui-breakpoint-object"},{default:s((()=>[_,C,I])),_:1}),U,n(re,null,{html:s((()=>[l('<w-card class="blue-light5--bg">\n  <div class="title2 mt0">\n    Current breakpoint:\n    <code>'+a("{{ $waveui.breakpoint.name }}")+'</code>\n  </div>\n  <em class="grey mt1">\n    Resizing your browser will update the current breakpoint.\n  </em>\n</w-card>\n',1)])),default:s((()=>[n(ce,{class:"blue-light5--bg"},{default:s((()=>[n("div",$,[z,n("code",null,a(o.$waveui.breakpoint.name),1)]),L])),_:1})])),_:1}),n(oe,{h2:""},{default:s((()=>[W])),_:1}),A,n(de,{language:"css"},{default:s((()=>[R])),_:1}),T,n(ue,{info:""},{default:s((()=>[B,D,Y,q,F,G,J,M,N])),_:1}),O,n(re,null,{html:s((()=>[K])),default:s((()=>[X,E,H])),_:1}),n(re,null,{html:s((()=>[Q])),default:s((()=>[P])),_:1}),n(ue,{tip:""},{default:s((()=>[V,Z,ee,n(de,{class:"mb0",language:"js"},{default:s((()=>[te])),_:1})])),_:1}),n(oe,{h2:""},{default:s((()=>[ne])),_:1}),se,n(de,{language:"js"},{default:s((()=>[le])),_:1})])}};export default ae;
