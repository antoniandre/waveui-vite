import{o as s,c as a,a as e,w as n,d as l,g as p,r}from"./vendor.66ab2837.js";const t=l("Customization Via SCSS (optional)"),o=e("strong",null,"If you are using Nuxt",-1),i=l(", the steps to follow are different. Check the last paragraph of the"),c=e("a",{class:"ml1",href:"/getting-started#installation-on-nuxt"},"Nuxt installation",-1),u=l("."),d=p('<p class="mt8">Wave UI components rely on SCSS variables that you can easily override from your SCSS file,\njust like this:</p><pre class="ssh-pre" data-label="SCSS"><span class="purple text-bold">@import </span><span class="red-light2">&#39;wave-ui/src/wave-ui/scss/_variables&#39;</span><span class="blue-grey">;</span><br><br><span class="pink">$base-font-size</span><span class="blue-grey">: </span><span class="deep-orange">14px</span><span class="blue-grey">;</span><br><span class="pink">$base-increment</span><span class="blue-grey">: </span><span class="deep-orange">5px</span><span class="blue-grey">;</span></pre><div class="title4">But to do so, you need to slightly modify your config.</div>',3),b=l("Modify your config"),g=e("div",{class:"title4 mt4"},"1. Install the devDependencies",-1),y=l("npm i -D pug pug-plain-loader node-sass sass-loader@10"),m=p('<small class="text-italic grey">The dev dependencies are only needed for building the project. They will not ship to production.</small><p class="mt3">Notes: <span class="code">sass-loader 11</span> only works with Webpack 5.</p><div class="title4 mt8">2. Update <span class="code">main.js</span></div><p>In main.js, replace the 2 Wave UI imports with:</p>',4),v=l("import WaveUI from 'wave-ui/src/wave-ui'\n"),h=e("div",{class:"title4 mt8"},"3. Create an SCSS file & import it globally",-1),f=e("li",null,[l("In your project "),e("span",{class:"code"},"src"),l(" folder, create a "),e("code",null,"_variables.scss"),l(" (usually in an "),e("span",{class:"code"},"scss"),l("\nfolder), and import Wave UI's variables: "),e("code",null,"@import 'wave-ui/src/wave-ui/scss/_variables';"),l(".\n")],-1),S={class:"mt2"},w=l("Import your SCSS variables file globally from Vue config and re-serve the app."),x=l("module.exports = {\n  transpileDependencies: ['wave-ui'], // ! \\\\\n  css: {\n    loaderOptions: {\n      // `additionalData` was called `prependData` prior sass-loader 9.\n      sass: { additionalData: '@import \"@/scss/_variables.scss\";' }\n    }\n  }\n}\n"),_=l("Note from the above code that since you import Wave UI source code, you need to transpile it.\n"),k=e("div",{class:"title4 mt8"},"Voilà !",-1),C=e("p",null,"You're all set, you can now override the SCSS variables.",-1),I=e("div",{class:"w-divider my12"},null,-1),$=l("Basic SCSS overrides"),j=p('<pre class="ssh-pre" data-label="@/scss/_variables.scss"><span class="grey-light1 text-italic">// First import the Wave UI variables, then override what you want.</span><br><span class="purple text-bold">@import </span><span class="red-light2">&#39;wave-ui/src/wave-ui/scss/_variables&#39;</span><span class="blue-grey">;</span><br><br><span class="pink">$base-font-size</span><span class="blue-grey">: </span><span class="deep-orange">14px</span><span class="blue-grey">;</span><br><span class="pink">$base-increment</span><span class="blue-grey">: </span><span class="purple text-bold">round</span><span class="blue-grey">(</span><span class="pink">$base-font-size</span><span class="blue-grey mx1">/</span><span class="orange">4</span><span class="blue-grey">)</span><span class="blue-grey">;</span><br><span class="pink">$layout-padding</span><span class="blue-grey">: </span><span class="pink">$base-increment</span><span class="blue-grey mx1">*</span><span class="orange">4</span><span class="blue-grey">;</span><br><span class="pink">$border-radius</span><span class="blue-grey">: </span><span class="deep-orange">3px</span><span class="blue-grey">;</span><br><span class="pink">$border</span><span class="blue-grey">: </span><span class="deep-orange">1px solid rgba(0, 0, 0, 0.15)</span><span class="blue-grey">;</span><br><span class="pink">$drawer-max-size</span><span class="blue-grey">: </span><span class="deep-orange">380px</span><span class="blue-grey">;</span><br><span class="pink">$transition-duration</span><span class="blue-grey">: </span><span class="deep-orange">0.25s</span><span class="blue-grey">;</span><br><span class="pink">$box-shadow</span><span class="blue-grey">: </span><span class="deep-orange">0 3px 1px -2px rgba(0, 0, 0, 0.2),</span><br><span class="deep-orange">             0 2px 2px 0 rgba(0, 0, 0, 0.15),</span><br><span class="deep-orange">             0 1px 5px 0 rgba(0, 0, 0, 0.15)</span><span class="blue-grey">;</span></pre>',1),U=l("Give Wave UI CSS more priority"),W=p('<p>It is also possible to control Wave UI&#39;s CSS rules priorities by overriding the CSS base scope:</p><pre class="ssh-pre" data-label="SCSS"><span class="pink">$css-scope</span><span class="blue-grey mr1">:</span><span class="red-light2">&#39;.w-app&#39;</span><span class="blue-grey">;</span></pre><p>For instance if you set the scope to <code>html &gt; body &gt; div.w-app</code>, the default\n<code>.w-app .primary {color: #234781;}</code> would become\n<code>html &gt; body &gt; div.w-app .primary {color: #234781;}</code>.</p>',3),z=l("This means you can control all the css rules specificity and consequently their priority!\n"),D=l("Presets"),N=l("Coming soon"),B=l("// Buttons example.\n{\n  'w-button': { sm: true, outlined: true, round: true }\n}");const T={render:function(l,p){const T=r("title-link"),V=r("alert"),F=r("ssh-pre"),q=r("w-tag");return s(),a("main",null,[e(T,{class:"mt4",h1:"",slug:"customization"},{default:n((()=>[t])),_:1}),e(V,{info:""},{default:n((()=>[o,i,c,u])),_:1}),d,e(T,{h2:""},{default:n((()=>[b])),_:1}),g,e(F,{class:"mb2",language:"shell"},{default:n((()=>[y])),_:1}),m,e(F,{class:"mt5",language:"js",label:"main.js"},{default:n((()=>[v])),_:1}),h,e("ul",null,[f,e("li",S,[w,e(F,{class:"mt5",language:"js",label:"vue.config.js"},{default:n((()=>[x])),_:1}),e(V,{info:""},{default:n((()=>[_])),_:1})])]),k,C,I,e(T,{h2:""},{default:n((()=>[$])),_:1}),j,e(T,{h2:""},{default:n((()=>[U])),_:1}),W,e(V,{class:"mt6 py3",success:""},{default:n((()=>[z])),_:1}),e(T,{h2:"",slug:"presets"},{default:n((()=>[D,e(q,{class:"ml3","bg-color":"red-light1",lg:"",color:"white"},{default:n((()=>[N])),_:1})])),_:1}),e(F,{language:"js",label:"Javascript"},{default:n((()=>[B])),_:1})])}};export default T;
