var e=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,t=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,n=(l,o,t)=>o in l?e(l,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[o]=t,s=(e,l)=>{for(var o in l||(l={}))c.call(l,o)&&n(e,o,l[o]);if(t)for(var o of t(l))a.call(l,o)&&n(e,o,l[o]);return e};import{o as i,c as d,a as r,w as h,f as u,d as m,r as b,F as p,u as k,q as x,b as f,m as v,e as w,l as g,B as y}from"./vendor.66ab2837.js";import{F as C}from"./form-elements.2275b6fe.js";const V=r("p",{class:"mb3"},"What it looks like:",-1),_=r("div",{class:"title4 mt4"},"States",-1),T={class:"w-flex wrap"},O=r("p",{class:"mt12"},[m("There are 2 components: "),r("span",{class:"code"},"w-checkbox"),m(" & "),r("span",{class:"code"},"w-checkboxes"),m(".\nThe later is a group of checkboxes for convenience.\n")],-1),U=r("p",null,[m("In most cases what you need is the "),r("span",{class:"code"},"w-checkboxes"),m(" component bellow, but let's start with the\nbasic component as it might be useful in single checkboxes and edge cases.\n")],-1),L=m("<w-checkbox>"),$=r("div",{class:"w-divider"},null,-1),D=r("div",{class:"title4 mb2"},"Basic use",-1),j=m("Single option"),I=r("div",{class:"title4 mt8 mb2"},"Using v-model on a single checkbox",-1),E=m("Single option"),A={class:"ml6"},P=m("v-model:"),M={class:"ml1"},S=r("div",{class:"title4 mt8 mb2"},"Using an array of v-model for multiple checkboxes",-1),q=m("Option 1"),B=m("Option 2"),R=m("Option 3"),H={class:"ml6"},K=m("v-model:"),W={class:"ml1"},F=m('<div class="title4 mb2">Basic use</div>\n<w-checkbox>Single option</w-checkbox>\n\n<div class="title4 mt8 mb2">Using v-model on a single checkbox</div>\n<w-flex class="align-center">\n  <w-checkbox v-model="selection1">Single option</w-checkbox>\n\n  <span class="ml6">\n    v-model:\n    <code class="ml1">'+u("{{ selection1 }}")+'</code>\n  </span>\n</w-flex>\n\n<div class="title4 mt8 mb2">Using an array of v-model for multiple checkboxes</div>\n<w-flex class="align-center">\n  <w-checkbox class="mr2" v-model="selection2[0]">Option 1</w-checkbox>\n  <w-checkbox class="mr2" v-model="selection2[1]">Option 2</w-checkbox>\n  <w-checkbox v-model="selection2[2]">Option 3</w-checkbox>\n\n  <span class="ml6">\n    v-model:\n    <code class="ml1">'+u("{{ selection2 }}")+"</code>\n  </span>\n</w-flex>"),z=m("data: () => ({\n  selection1: false,\n  selection2: [false, false, false]\n})\n"),N=m("Unlike the radio buttons, checkboxes don't need the "),Y=r("code",null,"name",-1),G=m(" prop in addition to the "),J=r("code",null,"v-model",-1),Q=m("\nto work together and control with arrow keys since the default HTML behavior does not include control from\nthe keyboard arrows (you can navigate with "),X=r("kbd",null,"tab",-1),Z=m(" and toggle with "),ee=r("kbd",null,"space",-1),le=m(" or "),oe=r("kbd",null,"enter",-1),te=m(")."),ce=r("br",null,null,-1),ae=m("\nWhen you use a group of checkboxes via <w-checkboxes>, Wave UI will add the name attributes for you.\n"),ne=r("strong",{class:"title5"},"Form validation",-1),se=r("p",null,[m("When a validation is needed on checkboxes, each individual checkbox ("),r("span",{class:"code"},"w-checkbox"),m(") has a\nseparate validation message."),r("br"),m("\nIf you want only one validation for a group of checkboxes you must use the "),r("span",{class:"code"},"w-checkboxes"),m(" component.\n")],-1),ie=m("Custom label in w-checkbox"),de=r("p",null,[r("code",null,"w-checkbox"),m(" provides a default slot to customize the content.")],-1),re=r("span",{class:"pr1"},"Choice 1 has an icon",-1),he=m("mdi mdi-star"),ue=m("Choice 2 is a tag"),me=m("mdi mdi-heart"),be=m('<w-checkbox class="mr5" name="checkbox1">\n  <span class="pr1">Choice 1 has an icon</span>\n  <w-icon md>mdi mdi-star</w-icon>\n</w-checkbox>\n\n<w-checkbox name="checkbox1">\n  <w-tag bg-color="green-light5" color="green-dark2">\n    Choice 2 is a tag\n    <w-icon class="ml1">mdi mdi-heart</w-icon>\n  </w-tag>\n</w-checkbox>\n'),pe=m("As seen in this example, the "),ke=r("span",{class:"code"},"w-checkbox",-1),xe=m(" component allows you to have complete freedom\nregarding your checkboxes content, style and layout."),fe=r("br",null,null,-1),ve=m("\nBut because in most cases you won't need that, the "),we=r("span",{class:"code"},"w-checkboxes",-1),ge=m(" component will make you\ngo much faster.\n"),ye=m("<w-checkboxes>"),Ce=r("div",{class:"w-divider"},null,-1),Ve=r("p",{class:"my5"},[m("The "),r("span",{class:"code"},"w-checkboxes"),m(" component allows a fast and easy rendering of\nmultiple checkboxes by passing the items through a prop."),r("br"),m("\nIt accepts an inline parameter to display the checkboxes inline,\nand allows you to customize the label of each checkbox through slot.\n")],-1),_e=m("V-model"),Te=m("If a value is set in the choice's data, it will be returned through the v-model when selected."),Oe=r("br",null,null,-1),Ue=m("\nIf no value is set, the choice's label will be returned instead."),Le={class:"w-flex align-center"},$e={class:"title3 ml8"},De=m("v-model:"),je={class:"ml1"},Ie=m('<div class="w-flex align-center">\n  <w-checkboxes v-model="selection" :items="checkboxes"></w-checkboxes>\n  <div class="title3 ml8">v-model: '+u("{{ selection || '[]' }}")+"</div>\n</div>"),Ee=m("data: () => ({\n  selection: [],\n  checkboxes: [\n    { label: 'Choice 1', value: 1 },\n    { label: 'Choice 2', value: 2 },\n    { label: 'Choice 3', value: 3 }\n  ]\n})\n"),Ae=r("p",null,"The v-model can also be preset, or updated externally.",-1),Pe={class:"w-flex align-center"},Me=m("Toggle checkbox 2"),Se={class:"title3 ml8"},qe=m("v-model:"),Be={class:"ml1"},Re=m('<div class="w-flex align-center">\n  <div>\n    <w-checkboxes v-model="selection" :items="checkboxes"></w-checkboxes>\n    <w-button class="mt2" @click="selection = selection.length ? [] : [2]">\n      Toggle checkbox 2\n    </w-button>\n  </div>\n\n  <div class="title3 ml8">\n    v-model:\n    <code class="ml1">'+u("{{ selection || '[]' }}")+"</code>\n  </div>\n</div>"),He=m("data: () => ({\n  selection: [],\n  checkboxes: [\n    { label: 'Choice 1', value: 1 },\n    { label: 'Choice 2', value: 2 },\n    { label: 'Choice 3', value: 3 }\n  ]\n})\n"),Ke=m("Layout"),We=r("div",{class:"title4 mb2"},"Default column layout",-1),Fe=r("div",{class:"title4 mt6 mb2"},"Inline layout",-1),ze=m('<div class="title4 mb2">Default column layout</div>\n<w-checkboxes :items="checkboxes"></w-checkboxes>\n\n<div class="title4 mt6 mb2">Inline layout</div>\n<w-checkboxes :items="checkboxes" inline></w-checkboxes>'),Ne=m("data: () => ({\n  checkboxes: [\n    { label: 'Choice 1', value: 1 },\n    { label: 'Choice 2', value: 2 },\n    { label: 'Choice 3', value: 3 }\n  ]\n})\n"),Ye=m("Custom label content"),Ge=r("p",null,[r("span",{class:"code"},"w-checkboxes"),m(" provides a "),r("code",null,"label"),m(" slot to customize the label of each checkbox button.")],-1),Je={class:"pr2"},Qe=m("data: () => ({\n  checkboxes: [\n    { label: 'Square', icon: 'mdi mdi-square' },\n    { label: 'Circle', icon: 'mdi mdi-circle' },\n    { label: 'Triangle', icon: 'mdi mdi-triangle' }\n  ]\n})\n"),Xe=r("div",{class:"w-divider grey-light5 my12"},null,-1),Ze=m("Round checkboxes"),el=m('<w-checkboxes\n  v-model="selection"\n  :items="checkboxes"\n  round\n  inline>\n</w-checkboxes>'),ll=m("data: () => ({\n  selection: [1],\n  checkboxes: [\n    { label: 'Choice 1', value: 1 },\n    { label: 'Choice 2', value: 2 },\n    { label: 'Choice 3', value: 3 }\n  ]\n})\n"),ol=m("Color"),tl=r("p",null,[m("By default the "),r("span",{class:"code"},"w-checkbox"),m(" & "),r("span",{class:"code"},"w-checkboxes"),m(" components will use the\nprimary color."),r("br"),m("\nYou can provide a different color with the "),r("code",null,"color"),m(" option, or you can even set a different\ncolor per item by providing a "),r("code",null,"color"),m(" attribute in each of the item objects.\n")],-1),cl=r("span",{class:"code"},"w-checkboxes",-1),al=m(" colors"),nl=r("div",{class:"title4 mt8 mb2"},"Different color per item",-1),sl=m('<w-checkboxes\n  v-model="selection1"\n  :items="checkboxes1"\n  color="purple">\n</w-checkboxes>\n\n<div class="title4 mt8 mb2">Different color per item</div>\n<w-checkboxes\n  v-model="selection2"\n  :items="checkboxes2">\n</w-checkboxes>'),il=m("data: () => ({\n  selection1: [1, 2, 3],\n  checkboxes1: [\n    { label: 'Choice 1', value: 1 },\n    { label: 'Choice 2', value: 2 },\n    { label: 'Choice 3', value: 3 }\n  ],\n  selection2: [1, 2, 3],\n  checkboxes2: [\n    { label: 'Choice 1', value: 1, color: 'amber' },\n    { label: 'Choice 2', value: 2, color: 'warning' },\n    { label: 'Choice 3', value: 3, color: 'error' }\n  ]\n})"),dl=r("span",{class:"code"},"w-checkbox",-1),rl=m(" colors"),hl=m("Option 1"),ul=m("Option 2"),ml=r("div",{class:"title4 mt8 mb2"},"Different color per item",-1),bl=m("Option 1"),pl=m("Option 2"),kl=m('<w-checkbox\n  class="mr2"\n  v-model="selection1[0]"\n  color="teal-light1">\n  Option 1\n</w-checkbox>\n<w-checkbox\n  v-model="selection1[1]"\n  color="teal-light1">\n  Option 2\n</w-checkbox>\n\n<div class="title4 mt8 mb2">Different color per item</div>\n<w-checkbox\n  class="mr2"\n  v-model="selection2[0]"\n  color="pink-light3">\n  Option 1\n</w-checkbox>\n<w-checkbox\n  v-model="selection2[1]"\n  color="blue-light1">\n  Option 2\n</w-checkbox>'),xl=m("data: () => ({\n  selection1: [true, true],\n  selection2: [true, true],\n  checkboxes: [\n    { label: 'Choice 1' },\n    { label: 'Choice 2' },\n    { label: 'Choice 3' }\n  ]\n})");const fl={data:()=>({selection1:!1,selection1b:[],selection2:[!1,!1,!1],selection3:[2],selection4:[1,2,3],selection5:[!0,!0],selection6:[!0,!0],selection7:[1,2,3],selection8:[1],checkboxes1:[{label:"Choice 1",value:1},{label:"Choice 2",value:2},{label:"Choice 3",value:3}],checkboxes2:[{label:"Choice 1"},{label:"Choice 2"},{label:"Choice 3"},{label:"Choice 4"}],checkboxes3:[{label:"Square",icon:"mdi mdi-square"},{label:"Circle",icon:"mdi mdi-circle"},{label:"Triangle",icon:"mdi mdi-triangle"}],checkboxes4:[{label:"Choice 1",value:1,color:"amber"},{label:"Choice 2",value:2,color:"warning"},{label:"Choice 3",value:3,color:"error"}]})};fl.render=function(e,l,o,t,c,a){const n=b("w-checkboxes"),s=b("w-checkbox"),p=b("w-card"),k=b("title-link"),x=b("w-flex"),f=b("example"),v=b("alert"),w=b("w-icon"),g=b("w-tag"),y=b("w-button");return i(),d("div",null,[r(p,{"bg-color":"blue-light5"},{default:h((()=>[V,r(n,{items:e.checkboxes1,inline:""},null,8,["items"]),_,r("div",T,[r(s,{class:"mr3 mb1","model-value":!0,label:"Checked"}),r(s,{class:"mr3 mb1","model-value":!1,label:"Unchecked"}),r(s,{class:"mr3 mb1","model-value":!0,indeterminate:"",label:"Indeterminate"}),r(s,{class:"mr3 mb1","model-value":!0,disabled:"",label:"Checked &amp; disabled"}),r(s,{class:"mr3 mb1","model-value":!1,disabled:"",label:"Unchecked &amp; disabled"}),r(s,{class:"mr3 mb1","model-value":!0,disabled:"",indeterminate:"",label:"Indeterminate &amp; disabled"})])])),_:1}),O,U,r(k,{class:"title1 mt12",h2:"",slug:"w-checkbox"},{default:h((()=>[L])),_:1}),$,r(f,null,{html:h((()=>[F])),js:h((()=>[z])),default:h((()=>[D,r(s,null,{default:h((()=>[j])),_:1}),I,r(x,{class:"align-center"},{default:h((()=>[r(s,{modelValue:e.selection1,"onUpdate:modelValue":l[1]||(l[1]=l=>e.selection1=l)},{default:h((()=>[E])),_:1},8,["modelValue"]),r("span",A,[P,r("code",M,u(e.selection1),1)])])),_:1}),S,r(x,{class:"align-center"},{default:h((()=>[r(s,{class:"mr2",modelValue:e.selection2[0],"onUpdate:modelValue":l[2]||(l[2]=l=>e.selection2[0]=l)},{default:h((()=>[q])),_:1},8,["modelValue"]),r(s,{class:"mr2",modelValue:e.selection2[1],"onUpdate:modelValue":l[3]||(l[3]=l=>e.selection2[1]=l)},{default:h((()=>[B])),_:1},8,["modelValue"]),r(s,{modelValue:e.selection2[2],"onUpdate:modelValue":l[4]||(l[4]=l=>e.selection2[2]=l)},{default:h((()=>[R])),_:1},8,["modelValue"]),r("span",H,[K,r("code",W,u(e.selection2),1)])])),_:1})])),_:1}),r(v,{info:""},{default:h((()=>[N,Y,G,J,Q,X,Z,ee,le,oe,te,ce,ae])),_:1}),r(v,{tip:""},{default:h((()=>[ne,se])),_:1}),r(k,{h2:""},{default:h((()=>[ie])),_:1}),de,r(f,{"content-class":"mt3"},{html:h((()=>[be])),default:h((()=>[r(s,{class:"mr5",name:"checkbox4"},{default:h((()=>[re,r(w,{md:""},{default:h((()=>[he])),_:1})])),_:1}),r(s,{name:"checkbox4"},{default:h((()=>[r(g,{"bg-color":"green-light5",color:"green-dark2"},{default:h((()=>[ue,r(w,{class:"ml1"},{default:h((()=>[me])),_:1})])),_:1})])),_:1})])),_:1}),r(v,{class:"mt8",tip:""},{default:h((()=>[pe,ke,xe,fe,ve,we,ge])),_:1}),r(k,{class:"title1 mt12",h2:"",slug:"w-checkboxes"},{default:h((()=>[ye])),_:1}),Ce,Ve,r(k,{class:"title2 primary",h3:""},{default:h((()=>[_e])),_:1}),r(v,{info:""},{default:h((()=>[Te,Oe,Ue])),_:1}),r(f,null,{html:h((()=>[Ie])),js:h((()=>[Ee])),default:h((()=>[r("div",Le,[r(n,{modelValue:e.selection1b,"onUpdate:modelValue":l[5]||(l[5]=l=>e.selection1b=l),items:e.checkboxes1},null,8,["modelValue","items"]),r("div",$e,[De,r("code",je,u(e.selection1b||"[]"),1)])])])),_:1}),Ae,r(f,null,{html:h((()=>[Re])),js:h((()=>[He])),default:h((()=>[r("div",Pe,[r("div",null,[r(n,{modelValue:e.selection3,"onUpdate:modelValue":l[6]||(l[6]=l=>e.selection3=l),items:e.checkboxes1},null,8,["modelValue","items"]),r(y,{class:"mt2",onClick:l[7]||(l[7]=l=>e.selection3=e.selection3.length?[]:[2])},{default:h((()=>[Me])),_:1})]),r("div",Se,[qe,r("code",Be,u(e.selection3||"[]"),1)])])])),_:1}),r(k,{h2:""},{default:h((()=>[Ke])),_:1}),r(f,null,{html:h((()=>[ze])),js:h((()=>[Ne])),default:h((()=>[We,r(n,{items:e.checkboxes1},null,8,["items"]),Fe,r(n,{items:e.checkboxes1,inline:""},null,8,["items"])])),_:1}),r(k,{h2:""},{default:h((()=>[Ye])),_:1}),Ge,r(f,null,{html:h((()=>[m('<w-checkboxes :items="checkboxes" color="green">\n  <template #item="{ item }">\n    <span class="pr2">'+u("{{ item.label }}")+'</span>\n    <w-icon class="deep-purple">'+u("{{ item.icon }}")+"</w-icon>\n  </template>\n</w-checkboxes>",1)])),js:h((()=>[Qe])),default:h((()=>[r(n,{items:e.checkboxes3,color:"green"},{item:h((({item:e})=>[r("span",Je,u(e.label),1),r(w,{class:"deep-purple"},{default:h((()=>[m(u(e.icon),1)])),_:2},1024)])),_:1},8,["items"])])),_:1}),Xe,r(k,{h2:""},{default:h((()=>[Ze])),_:1}),r(f,{"content-class":"mt3"},{html:h((()=>[el])),js:h((()=>[ll])),default:h((()=>[r(n,{modelValue:e.selection8,"onUpdate:modelValue":l[8]||(l[8]=l=>e.selection8=l),items:e.checkboxes1,round:"",inline:""},null,8,["modelValue","items"])])),_:1}),r(k,{h2:""},{default:h((()=>[ol])),_:1}),tl,r(k,{h3:"",slug:"w-checkboxes--colors"},{default:h((()=>[cl,al])),_:1}),r(f,null,{html:h((()=>[sl])),js:h((()=>[il])),default:h((()=>[r(n,{modelValue:e.selection4,"onUpdate:modelValue":l[9]||(l[9]=l=>e.selection4=l),items:e.checkboxes1,color:"purple"},null,8,["modelValue","items"]),nl,r(n,{modelValue:e.selection7,"onUpdate:modelValue":l[10]||(l[10]=l=>e.selection7=l),items:e.checkboxes4},null,8,["modelValue","items"])])),_:1}),r(k,{h3:"",slug:"w-checkbox--colors"},{default:h((()=>[dl,rl])),_:1}),r(f,null,{html:h((()=>[kl])),js:h((()=>[xl])),default:h((()=>[r(s,{class:"mr2",modelValue:e.selection5[0],"onUpdate:modelValue":l[11]||(l[11]=l=>e.selection5[0]=l),color:"teal-light1"},{default:h((()=>[hl])),_:1},8,["modelValue"]),r(s,{modelValue:e.selection5[1],"onUpdate:modelValue":l[12]||(l[12]=l=>e.selection5[1]=l),color:"teal-light1"},{default:h((()=>[ul])),_:1},8,["modelValue"]),ml,r(s,{class:"mr2",modelValue:e.selection6[0],"onUpdate:modelValue":l[13]||(l[13]=l=>e.selection6[0]=l),color:"pink-light3"},{default:h((()=>[bl])),_:1},8,["modelValue"]),r(s,{modelValue:e.selection6[1],"onUpdate:modelValue":l[14]||(l[14]=l=>e.selection6[1]=l),color:"blue-light1"},{default:h((()=>[pl])),_:1},8,["modelValue"])])),_:1})])};const vl={name:"w-checkboxes",mixins:[C],props:{items:{type:Array,required:!0},modelValue:{type:Array},labelOnLeft:{type:Boolean},itemLabelKey:{type:String,default:"label"},itemValueKey:{type:String,default:"value"},itemColorKey:{type:String,default:"color"},inline:{type:Boolean},round:{type:Boolean},color:{type:String,default:"primary"}},emits:["input","update:modelValue","focus"],provide:()=>({wCheckboxes:!0}),computed:{checkboxItems(){return(this.items||[]).map(((e,t)=>{const c=void 0===e[this.itemValueKey]?e[this.itemLabelKey]||t:e[this.itemValueKey];return g((a=s({},e),n={label:e[this.itemLabelKey],index:t,value:c,color:e[this.itemColorKey]||this.color,isChecked:this.modelValue&&this.modelValue.includes(c)},l(a,o(n))));var a,n}))},classes(){return["w-checkboxes","w-checkboxes--"+(this.inline?"inline":"column")]}},methods:{reset(){this.checkboxItems.forEach((e=>e.isChecked=null)),this.$emit("update:modelValue",[]),this.$emit("input",[])},toggleCheck(e,l){e.isChecked=l;const o=this.checkboxItems.filter((e=>e.isChecked)).map((e=>e.value));this.$emit("update:modelValue",o),this.$emit("input",o)}},render:function(e,l,o,t,c,a){const n=b("w-checkbox");return i(),d(w(e.formRegister?"w-form-element":"div"),v({ref:"formEl"},e.formRegister&&{validators:e.validators,inputValue:a.checkboxItems.some((e=>e.isChecked)),disabled:e.isDisabled},{valid:e.valid,"onUpdate:valid":l[2]||(l[2]=l=>e.valid=l),onReset:a.reset,column:!o.inline,class:a.classes}),{default:h((()=>[(i(!0),d(p,null,k(a.checkboxItems,((t,c)=>(i(),d(n,{key:c,"model-value":t.isChecked,name:`${e.name||`w-checkboxes--${e._.uid}`}[]`,label:t.label,"label-on-left":o.labelOnLeft,color:t.color,round:o.round,"onUpdate:modelValue":e=>a.toggleCheck(t,e),disabled:e.isDisabled||null,readonly:e.isReadonly||null,onFocus:l[1]||(l[1]=l=>e.$emit("focus",l)),class:{mt1:!o.inline&&c}},{default:h((()=>[e.$slots.item?x(e.$slots,"item",{key:0,item:t}):t.label?(i(),d("div",{key:1,innerHTML:t.label},null,8,["innerHTML"])):f("",!0)])),_:2},1032,["model-value","name","label","label-on-left","color","round","onUpdate:modelValue","disabled","readonly","class"])))),128))])),_:1},16,["valid","onReset","column","class"])}},wl=r("svg",{width:"11px",height:"9px",viewbox:"0 0 12 9"},[r("polyline",{points:"1 5 4 8 10 2"})],-1);const gl={name:"w-checkbox",mixins:[C],inject:{wCheckboxes:{default:null}},props:{modelValue:{default:!1},returnValue:{},label:{type:String},labelOnLeft:{type:Boolean},color:{type:String,default:"primary"},noRipple:{type:Boolean},indeterminate:{type:Boolean},round:{type:Boolean}},emits:["input","update:modelValue","focus","blur"],data(){return{isChecked:this.modelValue,ripple:{start:!1,end:!1,timeout:null}}},computed:{hasLabel(){return this.label||this.$slots.default},classes(){return{["w-checkbox w-checkbox--"+(this.isChecked?"checked":"unchecked")]:!0,"w-checkbox--disabled":this.isDisabled,"w-checkbox--indeterminate":this.indeterminate,"w-checkbox--ripple":this.ripple.start,"w-checkbox--rippled":this.ripple.end,"w-checkbox--round":this.round}}},methods:{onInput(){this.isChecked=!this.isChecked,this.$emit("update:modelValue",this.isChecked),this.$emit("input",this.isChecked),this.noRipple||(this.isChecked?(this.ripple.start=!0,this.ripple.timeout=setTimeout((()=>{this.ripple.start=!1,this.ripple.end=!0,setTimeout((()=>this.ripple.end=!1),100)}),700)):(this.ripple.start=!1,clearTimeout(this.ripple.timeout)))}},watch:{modelValue(e){this.isChecked=e}},render:function(e,l,o,t,c,a){return i(),d(w(e.formRegister&&!a.wCheckboxes?"w-form-element":"div"),v({ref:"formEl"},e.formRegister&&{validators:e.validators,inputValue:c.isChecked,disabled:e.isDisabled},{valid:e.valid,"onUpdate:valid":l[6]||(l[6]=l=>e.valid=l),onReset:l[7]||(l[7]=l=>{e.$emit("update:modelValue",c.isChecked=null),e.$emit("input",null)}),class:a.classes}),{default:h((()=>[r("input",{ref:"input",id:`w-checkbox--${e._.uid}`,type:"checkbox",name:e.inputName,checked:c.isChecked||null,disabled:e.isDisabled||null,required:e.required||null,onFocus:l[1]||(l[1]=l=>e.$emit("focus",l)),onBlur:l[2]||(l[2]=l=>e.$emit("blur",l)),onChange:l[3]||(l[3]=e=>a.onInput()),onKeypress:l[4]||(l[4]=y(((...e)=>a.onInput&&a.onInput(...e)),["enter"])),"aria-checked":c.isChecked||"false",role:"checkbox"},null,40,["id","name","checked","disabled","required","aria-checked"]),a.hasLabel&&o.labelOnLeft?(i(),d(p,{key:0},[e.$slots.default?(i(),d("label",{key:0,class:"w-checkbox__label w-form-el-shakable pr2",for:`w-checkbox--${e._.uid}`},[x(e.$slots,"default")],8,["for"])):o.label?(i(),d("label",{key:1,class:"w-checkbox__label w-form-el-shakable pr2",for:`w-checkbox--${e._.uid}`,innerHTML:o.label},null,8,["for","innerHTML"])):f("",!0)],64)):f("",!0),r("div",{class:["w-checkbox__input",this.color],onClick:l[5]||(l[5]=l=>{e.$refs.input.focus(),e.$refs.input.click()})},[wl],2),a.hasLabel&&!o.labelOnLeft?(i(),d(p,{key:1},[e.$slots.default?(i(),d("label",{key:0,class:"w-checkbox__label w-form-el-shakable pl2",for:`w-checkbox--${e._.uid}`},[x(e.$slots,"default")],8,["for"])):o.label?(i(),d("label",{key:1,class:"w-checkbox__label w-form-el-shakable pl2",for:`w-checkbox--${e._.uid}`,innerHTML:o.label},null,8,["for","innerHTML"])):f("",!0)],64)):f("",!0)])),_:3},16,["valid","class"])}},yl=r("div",{class:"w-divider my12"},null,-1),Cl=m("<w-checkboxes> API"),Vl=r("div",{class:"w-divider my12"},null,-1),_l=m("<w-checkbox> API");const Tl={propsDescs:{items:"An array of checkbox items to display. Each item object should contain at least a <code>label</code> or a <code>value</code> attribute.",value:'<strong class="error"><code>model-value</code> in Vue 3.</strong><br>Provide an array of values to dictate the checked state of all the checkboxes.<br>This value gets updated when using a v-model.',labelOnLeft:"Moves the label to the left of each checkbox.",itemLabelKey:"The property name (aka key) in each item object where to find the label of the item (if any).",itemValueKey:"The property name (aka key) in each item object where to find the value of the item (if any).",itemColorKey:"The property name (aka key) in each item object where to find the color of the item (if any).",inline:"Displays all the checkboxes inline instead of in column.",round:"Displays round checkboxes instead of square ones.",color:'Applies a color to the active checkbox. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',name:"Provide a native HTML <code>name</code> attribute to the checkbox. If not provided, a unique common name will be computed and applied to all the checkboxes.",disabled:"Disables all the checkboxes making them unreactive to user interactions.",readonly:"The checkbox will still look like an interactive checkbox except that it is read-only: its current value cannot be changed by user interaction.",required:"Applies the native HTML <code>required</code> attribute to each checkbox.",validators:'<span class="deep-orange">Only for validation, when the <strong class="code">w-checkboxes</strong> component is wrapped into a <strong class="code">w-form</strong></span>.<br>An array of functions determining the validity of the checkbox. Each function will be executed on checkbox validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the checkbox.'},slots:{item:{description:"Provide a custom content for each checkbox label."}},events:{input:{description:"Emitted each time any of the checkboxes is toggled.<br>Updates the v-model value in Vue 2.x only.",params:{"[Array]":"Array of <code>return-value</code> of each checked checkbox.<br>The <code>return-value</code> is one of the following attributes, if they exist, in this order: the item value, the item label, the item index."}},"update:modelValue":{description:"Emitted each time any of the checkboxes is toggled.<br>Updates the v-model value in Vue 3 only.",params:{"[Array]":"Array of <code>return-value</code> of each checked checkbox.<br>The <code>return-value</code> is one of the following attributes, if they exist, in this order: the item value, the item label, the item index."}},focus:{description:"Emitted on each checkbox focus.",params:{"[DOM event object]":"The associated focus DOM event."}}}},Ol={propsDescs:{value:'<strong class="error"><code>model-value</code> in Vue 3.</strong><br>Provide a boolean to dictate the checked state the checkbox.<br>This value gets updated when using a v-model.',returnValue:"Since the native HTML checkbox element uses the <code>value</code> attribute to define the checked state, the <code>return-value</code> prop let you specify a value to return to the <code>v-model</code> when the checkbox is checked (instead of returning <code>true</code>).",label:"Sets a visible label for the checkbox.",labelOnLeft:"Moves the label to the left of the checkbox. By default the label is displayed on the right.",color:'Applies a color to the checkbox when active. Accepts all the color names of the color palette, status colors, or custom colors (learn more about the colors in the <a href="/colors">colors</a> knowledge base page).<br>Providing a color hex, rgb(a) or hsl(a) will not work.',noRipple:"Removes the ripple animation on check.",indeterminate:"Applies an indeterminate state on the checkbox. E.g. when it represents the selected state of a collection of elements where some are checked and some not.",round:"Displays a round checkbox instead of a square one.",name:"Provide a native HTML <code>name</code> attribute to the checkbox. If not provided, a unique name will be computed.",disabled:"Disables the checkbox making it unreactive to user interactions.",readonly:"The checkbox will still look like an interactive checkbox except that it is read-only: its current value cannot be changed by user interaction.",required:"Applies the native HTML <code>required</code> attribute to the checkbox.",validators:'<span class="deep-orange">Only for validation, when the checkbox is wrapped into a <strong class="code">w-form</strong></span>.<br>An array of functions determining the validity of the checkbox. Each function will be executed on checkbox validation and should return true when valid, or a string containing an error message when invalid. When one of the validators fails, the returned error message will appear underneath the checkbox.'},slots:{default:{description:"The checkbox label content."}},events:{input:{description:"Emitted each time the state of the checkbox changes.<br>Updates the v-model value in Vue 2.x only.",params:{"[Boolean]":"The current state of the checkbox."}},"update:modelValue":{description:"Emitted each time the state of the checkbox changes.<br>Updates the v-model value in Vue 3 only.",params:{"[Boolean]":"The current state of the checkbox."}},focus:{description:"Emitted on each checkbox focus.",params:{"[DOM event object]":"The associated focus DOM event."}}}},Ul={data:()=>({checkboxes:Tl,checkbox:Ol}),computed:{checkboxesProps:()=>s(s({},vl.props),C.props),checkboxProps:()=>s(s({},gl.props),C.props),checkboxesEvents:()=>vl.emits.reduce(((e,l)=>(e[l]=Tl.events[l]||{})&&e),{}),checkboxEvents:()=>gl.emits.reduce(((e,l)=>(e[l]=Ol.events[l]||{})&&e),{})},render:function(e,l,o,t,c,a){const n=b("title-link"),s=b("component-api");return i(),d("div",null,[yl,r(n,{class:"title1",h2:"",slug:"w-checkboxes-api"},{default:h((()=>[Cl])),_:1}),r(s,{class:"mt0",items:a.checkboxesProps,descriptions:e.checkboxes.propsDescs,title:"Props"},null,8,["items","descriptions"]),r(s,{items:e.checkboxes.slots,title:"Slots"},null,8,["items"]),r(s,{items:a.checkboxesEvents,title:"Events"},null,8,["items"]),Vl,r(n,{class:"title1",h2:"",slug:"w-checkbox-api"},{default:h((()=>[_l])),_:1}),r(s,{class:"mt0",items:a.checkboxProps,descriptions:e.checkbox.propsDescs,title:"Props"},null,8,["items","descriptions"]),r(s,{items:e.checkbox.slots,title:"Slots"},null,8,["items"]),r(s,{items:a.checkboxEvents,title:"Events"},null,8,["items"])])}},Ll=r("span",{class:"code"},"w-checkbox",-1),$l=m(" & "),Dl=r("span",{class:"code"},"w-checkboxes",-1);const jl={components:{Examples:fl,Api:Ul},render:function(e,l,o,t,c,a){const n=b("ui-component-title"),s=b("examples"),u=b("api");return i(),d("main",null,[r(n,{slug:"w-checkbox-and-w-checkboxes",code:!1},{default:h((()=>[Ll,$l,Dl])),_:1}),r(s),r(u)])}};export default jl;
